# Generated by Django 3.1.8 on 2021-06-04 02:42

from django.db import migrations
from django.core.management.sql import emit_post_migrate_signal

REVIEWER_PERMISSIONS = (
    "registration.view_application",
    "auth.view_user",
    "review.view_review",
    "review.change_review",
    "review.add_review",
    "review.view_teamreview",
)


def apply_migration(apps, schema_editor):
    # Permissions and content types are created after migrations. So in order for this migration to work on a new db,
    # we need to commit the previous migrations before continuing.
    db_alias = schema_editor.connection.alias
    emit_post_migrate_signal(2, False, db_alias)

    Group = apps.get_model("auth", "Group")
    Permission = apps.get_model("auth", "Permission")

    group, _ = Group.objects.get_or_create(name="Application Reviewers")
    with open("log.txt", "w") as outf:
        for permission in Permission.objects.all():
            outf.write(permission.name + "\n")
    for permission_name in REVIEWER_PERMISSIONS:
        print("\n" +permission_name + "\n")
        app_label, codename = permission_name.split(".", 1)
        permission = Permission.objects.get(content_type__app_label=app_label, codename=codename)
        group.permissions.add(permission)

    group.save()


def revert_migration(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    Group.objects.filter(name="Application Reviewers").delete()


class Migration(migrations.Migration):

    dependencies = [
        ("review", "0002_teamreview"),
    ]

    operations = [migrations.RunPython(apply_migration, revert_migration)]
